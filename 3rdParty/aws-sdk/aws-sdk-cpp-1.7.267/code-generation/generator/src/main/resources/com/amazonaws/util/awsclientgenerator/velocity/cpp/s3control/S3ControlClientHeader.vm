#parse("com/amazonaws/util/awsclientgenerator/velocity/cfamily/Attribution.vm")

#set($metadata = $serviceModel.metadata)
#pragma once
\#include <aws/$metadata.projectName/${metadata.classNamePrefix}_EXPORTS.h>
\#include <aws/$metadata.projectName/${metadata.classNamePrefix}Errors.h>
\#include <aws/core/client/AWSError.h>
\#include <aws/core/client/ClientConfiguration.h>
\#include <aws/core/client/AWSClient.h>
\#include <aws/core/auth/AWSAuthSigner.h>
\#include <aws/core/utils/memory/stl/AWSString.h>
\#include <aws/core/utils/xml/XmlSerializer.h>
\#include <aws/core/utils/DNS.h>
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ServiceClientHeaderModelIncludes.vm")
\#include <aws/core/client/AsyncCallerContext.h>
\#include <aws/core/http/HttpTypes.h>
#if($metadata.hasEndpointDiscoveryTrait)
\#include <aws/core/utils/ConcurrentCache.h>
#end
\#include <future>
\#include <functional>
#set($accountIdInHostnameSupported = true)
namespace Aws
{

  namespace Http
  {
    class HttpClient;
    class HttpClientFactory;
  } // namespace Http

  namespace Utils
  {
    template< typename R, typename E> class Outcome;

    namespace Threading
    {
      class Executor;
    } // namespace Threading

    namespace Xml
    {
      class XmlDocument;
    } // namespace Xml
  } // namespace Utils

  namespace Auth
  {
    class AWSCredentials;
    class AWSCredentialsProvider;
  } // namespace Auth

  namespace Client
  {
    class RetryStrategy;
  } // namespace Client

  namespace ${metadata.namespace}
  {
    namespace Model
    {
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ServiceClientHeaderModelDeclarations.vm")
    } // namespace Model

#set($className = "${metadata.classNamePrefix}Client")
    class ${className};

#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ServiceClientHeaderEventTypeDeclarations.vm")

#if($serviceModel.documentation)
    /**
     * ${serviceModel.documentation}
     */
#end
#set($finalClass = " final")
#if($serviceModel.enableVirtualOperations)
#set($finalClass = "")
#end
    class ${CppViewHelper.computeExportValue($metadata.classNamePrefix)} ${className}$finalClass : public Aws::Client::AWSXMLClient
    {
    public:
        typedef Aws::Client::AWSXMLClient BASECLASS;

#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ServiceClientHeaderConstructors.vm")

#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ServiceClientHeaderOperations.vm")
        
        void OverrideEndpoint(const Aws::String& endpoint);
    private:
        void init(const Client::ClientConfiguration& clientConfiguration);
        Aws::String ComputeEndpointString(const Aws::String& accountId) const;
        Aws::String ComputeEndpointString() const;

#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ServiceClientHeaderAsyncHelpers.vm")

        Aws::String m_baseUri;
        Aws::String m_scheme;
        Aws::String m_configScheme;
        std::shared_ptr<Utils::Threading::Executor> m_executor;
#if($metadata.hasEndpointDiscoveryTrait)
        mutable Aws::Utils::ConcurrentCache<Aws::String, Aws::String> m_endpointsCache;
        bool m_enableEndpointDiscovery;
#end
    };

  } // namespace ${metadata.namespace}
} // namespace Aws
